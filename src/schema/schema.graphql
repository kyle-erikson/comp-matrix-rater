type Query {
  getMatrices: [Matrix]
  getLevels(matrixId: Int): [Level]
  getUsers(managerId: Int): [User]
  getReportsForUser(userId: Int): [Report]
  getBaseReportForUser(userId: String, matrixId: String): [KeyAreas]
}

type Mutation {
  saveReport(input: ReportInput): Rating
}

input ReportInput {
  rating_id: Int
  matrix_report_id: Int
  matrix_id: Int
  competency_id: Int
  user_id: Int
  rating: Int
  notes: String
}

type Message {
  msg: String
}

type Matrix {
  id: Int
  name: String
}

type Level {
  id: Int
  name: String
  scope: String
}

type User {
  id: Int
  name: String
  email: String
  manager_id: Int
}

type Report {
  id: Int
  matrix_id: Int
  user_id: Int
}

type KeyAreas {
  name: String
  attribute: [Attributes]
}

type Attributes {
  name: String
  competency: [Competency]
}

type Competency {
  name: String
  competency_description: [CompetencyDescription]
}

type CompetencyDescription {
  core: Boolean
  description: String
}

type NewReport {
  id: Int
  report: [KeyAreas]
}

type Rating {
  id: Int
  competency_id: Int
  user_id: Int
  rating: Int
  notes: String
  matrix_report_id: Int
}
